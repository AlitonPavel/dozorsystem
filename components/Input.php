<?php

namespace app\components;

use PHPMailer\PHPMailer\PHPMailer;
use Yii;

class Input extends BaseWidget
{
    public $id;
    public $type;
    public $name;
    public $caption;
    public $error;
    public $value;
    public $width;
    public $placeholder;
    public $readOnly = false;
    public $autocomplete = "off";
    /** @var BaseActiveRecord $model */
    public $model;
    /** @var string $groupName */
    public $groupName;

    public $readRequest = true;
    public $pattern;

    public function readRequest()
    {
        if ($this->readRequest)
        {
            if (Yii::$app->request->post($this->name) != null)
            {
                $this->value = Yii::$app->request->post($this->name);
            } else if (Yii::$app->request->get($this->name) != null)
            {
                $this->value = Yii::$app->request->get($this->name);
            }
        }
    }

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

        if (empty($this->id))
        {
            throw new \Exception("Нужно указать id инпута");
        }

        $this->type = empty($this->type) ? 'text' : $this->type;
        $this->name = empty($this->name) ? $this->id : $this->name;

        $this->readRequest();

        if ($this->model)
        {
            $this->name = $this->model->formName() .  (empty($this->groupName) ? '' : '[' . $this->groupName . ']') . '[' . $this->name . ']';
            $this->caption = isset($this->caption) ? $this->caption : $this->model->getAttributeLabel($this->id);
            $this->error = $this->model->getFirstError($this->id);

            if ($this instanceof InputPrice)
            {
                $this->value = empty($this->value) ? Utils::formatBaseToFormatMoney($this->model->getAttribute($this->id)) : $this->value;
            }
            else
            {
                $this->value = empty($this->value) ? $this->model->getAttribute($this->id) : $this->value;
            }

        }
    }

    public function run()
    {
        return $this->render('input', [
            'widget' => $this
        ]);
    }

    public function getValue()
    {
        return $this->value;
    }
}